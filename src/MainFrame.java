import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.text.DecimalFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import net.proteanit.sql.DbUtils;

public class MainFrame extends javax.swing.JFrame {
    
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    String selectedCust = null;
    
    Double chipUnit = 25.40;
    Double threeQUnit = 13.40;
    Double abcUnit = 10.40;
    DecimalFormat df = new DecimalFormat("####0.00");
    
    public MainFrame() {
        initComponents();
        conn = javaconnect.ConnectDb();
        refreshVehiclePane();
        refreshCustomerPane();
        refreshOrderPane();
        updateHistoryTable();
        
        currentDate();
        
        ActionListener taskPerformer;
        taskPerformer = (ActionEvent evt) -> {
            currentDate();
        };
        Timer t = new Timer(1000, taskPerformer);
        t.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        metalGroup = new javax.swing.ButtonGroup();
        tabbedPane = new javax.swing.JTabbedPane();
        vehiclePane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vehicleTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        regField = new javax.swing.JTextField();
        cubeField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        customerPane = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        contactField = new javax.swing.JTextField();
        paymentField = new javax.swing.JTextField();
        addButton1 = new javax.swing.JButton();
        clearButton1 = new javax.swing.JButton();
        deleteButton1 = new javax.swing.JButton();
        dueLabel1 = new javax.swing.JLabel();
        customerField = new javax.swing.JTextField();
        placeOrderPane = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        orderLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        vehicleCombo = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        chipsButton = new javax.swing.JRadioButton();
        threeQButton = new javax.swing.JRadioButton();
        abcButton = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        cubeLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        amountLabel = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        dueLabel = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        payButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        payField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        customerCombo = new javax.swing.JComboBox<>();
        orderHistorPane = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        reportPane = new javax.swing.JPanel();
        dateLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BANDULA METAL CRUSHER");

        vehicleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vehicleTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        vehicleTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vehicleTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(vehicleTable);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add/Delete Vehicle", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(284, 168));

        jLabel1.setText("Registered Number");

        jLabel2.setText("Cubes");

        addButton.setText("UPDATE");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        clearButton.setText("CANCEL");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cubeField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(regField, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(12, 12, 12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 13, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(regField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cubeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(deleteButton)
                    .addComponent(clearButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout vehiclePaneLayout = new javax.swing.GroupLayout(vehiclePane);
        vehiclePane.setLayout(vehiclePaneLayout);
        vehiclePaneLayout.setHorizontalGroup(
            vehiclePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vehiclePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addContainerGap())
        );
        vehiclePaneLayout.setVerticalGroup(
            vehiclePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vehiclePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(vehiclePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        tabbedPane.addTab("         Vehicles         ", vehiclePane);

        customerPane.setName(""); // NOI18N

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        customerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(customerTable);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add/Edit Customer Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N

        jLabel12.setText("Customer Name");

        jLabel14.setText("Contact Number");

        jLabel15.setText("Due Amount");

        jLabel16.setText("Payment Received");

        contactField.setText("contact");

        paymentField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        paymentField.setText("payment");

        addButton1.setText("ADD");
        addButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButton1ActionPerformed(evt);
            }
        });

        clearButton1.setText("CANCEL");
        clearButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButton1ActionPerformed(evt);
            }
        });

        deleteButton1.setText("DELETE");
        deleteButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton1ActionPerformed(evt);
            }
        });

        dueLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        dueLabel1.setText("due1");

        customerField.setText("customer");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contactField)
                            .addComponent(paymentField)
                            .addComponent(dueLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(customerField)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(customerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(contactField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(dueLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(paymentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton1)
                    .addComponent(clearButton1)
                    .addComponent(addButton1))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout customerPaneLayout = new javax.swing.GroupLayout(customerPane);
        customerPane.setLayout(customerPaneLayout);
        customerPaneLayout.setHorizontalGroup(
            customerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        customerPaneLayout.setVerticalGroup(
            customerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(customerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabbedPane.addTab("          Customers          ", customerPane);

        jLabel5.setText("Order Number");

        jLabel6.setText("Vehicle");

        vehicleCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        vehicleCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                vehicleComboItemStateChanged(evt);
            }
        });

        jLabel7.setText("Metal Type");

        metalGroup.add(chipsButton);
        chipsButton.setText("Chips");
        chipsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chipsButtonActionPerformed(evt);
            }
        });

        metalGroup.add(threeQButton);
        threeQButton.setText("3/4'");
        threeQButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeQButtonActionPerformed(evt);
            }
        });

        metalGroup.add(abcButton);
        abcButton.setText("ABC");
        abcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abcButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Cubes");

        cubeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cubeLabel.setText("0");

        jLabel9.setText("Amount");

        jLabel11.setText("Due Amount");

        dueLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel13.setText("Amount Payed");

        payButton.setText("PAYED");
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("CANCEL");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        payField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);

        jLabel10.setText("Customer Name");

        customerCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        customerCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                customerComboItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout placeOrderPaneLayout = new javax.swing.GroupLayout(placeOrderPane);
        placeOrderPane.setLayout(placeOrderPaneLayout);
        placeOrderPaneLayout.setHorizontalGroup(
            placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(placeOrderPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(threeQButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(abcButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(amountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vehicleCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(orderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cubeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chipsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(placeOrderPaneLayout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(placeOrderPaneLayout.createSequentialGroup()
                                .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(payField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE))
                            .addComponent(customerCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(placeOrderPaneLayout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelButton)))
                .addGap(40, 40, 40))
        );
        placeOrderPaneLayout.setVerticalGroup(
            placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(placeOrderPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(orderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(placeOrderPaneLayout.createSequentialGroup()
                        .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(vehicleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cubeLabel)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(chipsButton)))
                    .addGroup(placeOrderPaneLayout.createSequentialGroup()
                        .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(customerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(dueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(payField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(threeQButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(abcButton)
                .addGap(17, 17, 17)
                .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(amountLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addGroup(placeOrderPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(payButton)
                        .addComponent(cancelButton)))
                .addGap(38, 38, 38))
        );

        tabbedPane.addTab("         Place Order         ", placeOrderPane);

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderTable);

        javax.swing.GroupLayout orderHistorPaneLayout = new javax.swing.GroupLayout(orderHistorPane);
        orderHistorPane.setLayout(orderHistorPaneLayout);
        orderHistorPaneLayout.setHorizontalGroup(
            orderHistorPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderHistorPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
                .addContainerGap())
        );
        orderHistorPaneLayout.setVerticalGroup(
            orderHistorPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderHistorPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPane.addTab("          Order History          ", orderHistorPane);

        javax.swing.GroupLayout reportPaneLayout = new javax.swing.GroupLayout(reportPane);
        reportPane.setLayout(reportPaneLayout);
        reportPaneLayout.setHorizontalGroup(
            reportPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 696, Short.MAX_VALUE)
        );
        reportPaneLayout.setVerticalGroup(
            reportPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 236, Short.MAX_VALUE)
        );

        tabbedPane.addTab("            Reports            ", reportPane);

        dateLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        dateLabel.setText("date");

        timeLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        timeLabel.setText("time");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void currentDate(){
        Calendar cal = new GregorianCalendar();
        int day = cal.get(Calendar.DAY_OF_MONTH);
        String month = null;
        switch(cal.get(Calendar.MONTH)){
            case 1: month = "January"; break;
            case 2: month = "February"; break;
            case 3: month = "March"; break;
            case 4: month = "April"; break;
            case 5: month = "May"; break;
            case 6: month = "June"; break;
            case 7: month = "July"; break;
            case 8: month = "August"; break;
            case 9: month = "September"; break;
            case 10: month = "October"; break;
            case 11: month = "November"; break;
            case 12: month = "December"; break;
        }
        int year = cal.get(Calendar.YEAR);
        int hour = cal.get(Calendar.HOUR);
        int min = cal.get(Calendar.MINUTE);
        int meri = cal.get(Calendar.AM_PM);
        
        
        dateLabel.setText(day + " " + month + " " + year);
        timeLabel.setText(((hour == 0)?"12":hour) + ":" + ((min < 10)?("0"+min):min) + " " + ((meri == 0)?"AM":"PM"));
    }
    
    
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
////These Codes are for the vehicle Pane
    private void refreshVehiclePane(){
        updateVehicleTable();
        clearVehiclePane();
    }
    
    private void updateVehicleTable(){
        
        try{
            String sql = "SELECT Reg_num AS \"Registered Number\", Cube AS \"Cubes\" FROM vehicle";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            vehicleTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void clearVehiclePane(){
        regField.setText(null);
        cubeField.setText(null);
        addButton.setText("ADD");
        clearButton.setText("CLEAR");
        deleteButton.setText("DELETE");
        deleteButton.setEnabled(false);
        regField.setEditable(true);
        vehicleTable.getSelectionModel().clearSelection();
    }
    
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if(vehicleTable.getSelectedRowCount() == 0){
            String sql = "INSERT into vehicle (Reg_num, Cube) VALUES (?, ?);";
            try{
                pst = conn.prepareStatement(sql);
                pst.setString(1, regField.getText());
                pst.setInt(2, Integer.parseInt(cubeField.getText()));

                pst.execute();
                //rs = pst.executeQuery();
                //System.out.println(rs.getStatement().toString());
                updateVehicleTable();
                updateVehicleCombo();
                JOptionPane.showMessageDialog(this, "Saved");
                clearVehiclePane();
                pst.closeOnCompletion();

            }catch(SQLException | NumberFormatException | HeadlessException e){
                JOptionPane.showMessageDialog(this, e);
            }
        }
        else{
            String sql = "UPDATE vehicle SET Cube = ? WHERE  Reg_num = ?";
            try{
                pst = conn.prepareStatement(sql);
                pst.setInt(1, Integer.parseInt(cubeField.getText()));
                pst.setString(2, regField.getText());

                pst.execute();
                
                //rs = pst.executeQuery();
                //System.out.println(rs.getStatement().toString());
                updateVehicleTable();
                JOptionPane.showMessageDialog(this, "Updated");
                clearVehiclePane();
                pst.closeOnCompletion();

            }catch(SQLException | NumberFormatException | HeadlessException e){
                JOptionPane.showMessageDialog(this, e);
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clearVehiclePane();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void vehicleTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vehicleTableMouseClicked
        try{
            int row = vehicleTable.getSelectedRow();
            regField.setText(vehicleTable.getModel().getValueAt(row, 0).toString());
            cubeField.setText(vehicleTable.getModel().getValueAt(row, 1).toString());
            regField.setEditable(false);
            addButton.setText("UPDATE");
            clearButton.setText("CANCEL");
            deleteButton.setEnabled(true);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_vehicleTableMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if(vehicleTable.getSelectedRowCount()!= 0){
            String sql = "DELETE FROM vehicle WHERE Reg_num = ?";
            try{
                pst = conn.prepareStatement(sql);
                pst.setString(1, regField.getText());

                pst.execute();
                
                updateVehicleTable();
                updateVehicleCombo();
                JOptionPane.showMessageDialog(this, "Deleted");
                clearVehiclePane();
                pst.closeOnCompletion();

            }catch(SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(this, e);
            }
        }
        else
            JOptionPane.showMessageDialog(this, "Please Select a row to delete");
    }//GEN-LAST:event_deleteButtonActionPerformed

///End of COdes for the Vehicle Pane
///////////////////////////////////////////////////////////////////////////////////////////////////////////
////These codes are for customer pane
    
    private void refreshCustomerPane(){
        updateCustomerTable();
        clearCustomerPane();
    }
    
    private void updateCustomerTable(){
        try{
            String sql = "SELECT name AS \"Customer Name\", contact AS \"Contact Number\", due AS \"due Amount\" FROM customers";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            customerTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            //pst.closeOnCompletion();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void clearCustomerPane(){
        customerField.setText(null);
        contactField.setText(null);
        dueLabel1.setText("0.00");
        paymentField.setText("0.00");
        addButton1.setText("ADD");
        clearButton1.setText("CLEAR");
        deleteButton1.setText("DELETE");
        deleteButton1.setEnabled(false);
        customerField.setEditable(true);
        paymentField.setEditable(false);
        vehicleTable.getSelectionModel().clearSelection();
    }
    
    private void addButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButton1ActionPerformed
        if(customerTable.getSelectedRowCount() == 0){
            String sql = "INSERT into customers (name, contact, due) VALUES (?, ?, ?);";
            try{
                pst = conn.prepareStatement(sql);
                pst.setString(1, customerField.getText());
                pst.setInt(2, Integer.parseInt(contactField.getText()));
                pst.setDouble(3, 0.00);

                pst.execute();
                //rs = pst.executeQuery();
                //System.out.println(rs.getStatement().toString());
                updateCustomerTable();
                updateCustomerCombo();
                JOptionPane.showMessageDialog(this, "Saved");
                clearCustomerPane();
                
                pst.closeOnCompletion();

            }catch(SQLException | NumberFormatException | HeadlessException e){
                JOptionPane.showMessageDialog(this, e);
            }
        }
        else{
            String sql = "UPDATE customers SET contact = ?, due = ? WHERE  name = ?";
            try{
                pst = conn.prepareStatement(sql);
                pst.setInt(1, Integer.parseInt(contactField.getText()));
                Double amount = Double.valueOf(df.format(Double.parseDouble(dueLabel1.getText()) - Double.parseDouble(paymentField.getText())));
                pst.setDouble(2, Double.valueOf(df.format(amount)));
                pst.setString(3, customerField.getText());

                pst.execute();
                
                //rs = pst.executeQuery();
                //System.out.println(rs.getStatement().toString());
                updateCustomerTable();
                JOptionPane.showMessageDialog(this, "Updated");
                clearCustomerPane();
                
                pst.closeOnCompletion();

            }catch(SQLException | NumberFormatException | HeadlessException e){
                JOptionPane.showMessageDialog(this, e);
            }
        }
    }//GEN-LAST:event_addButton1ActionPerformed

    private void clearButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButton1ActionPerformed
        clearCustomerPane();
    }//GEN-LAST:event_clearButton1ActionPerformed

    private void deleteButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton1ActionPerformed
        if(customerTable.getSelectedRowCount()!= 0){
            String sql = "DELETE FROM customers WHERE name = ?";
            try{
                pst = conn.prepareStatement(sql);
                pst.setString(1, customerField.getText());

                pst.execute();
                
                updateCustomerTable();
                updateCustomerCombo();
                JOptionPane.showMessageDialog(this, "Deleted");
                clearCustomerPane();
                
                pst.closeOnCompletion();

            }catch(SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(this, e);
            }
        }
        else
            JOptionPane.showMessageDialog(this, "Please Select a row to delete");
    }//GEN-LAST:event_deleteButton1ActionPerformed

    private void customerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTableMouseClicked
        try{
            int row = customerTable.getSelectedRow();
            customerField.setText(customerTable.getModel().getValueAt(row, 0).toString());
            contactField.setText(customerTable.getModel().getValueAt(row, 1).toString());
            dueLabel1.setText(customerTable.getModel().getValueAt(row, 2).toString());
            customerField.setEditable(false);
            paymentField.setEditable(true);
            addButton1.setText("UPDATE");
            clearButton1.setText("CANCEL");
            deleteButton1.setEnabled(true);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_customerTableMouseClicked

///End of COdes for the customer Pane
///////////////////////////////////////////////////////////////////////////////////////////////////////////
////These codes are for order pane
    private void refreshOrderPane(){
        updateOrderNumber();
        updateVehicleCombo();
        updateCustomerCombo();
        clearOrderPane();
        updateHistoryTable();
    }
    
    private void updateOrderNumber(){
        try{
            String sql = "SELECT count(ID) FROM orders";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            orderLabel.setText(""+(rs.getInt(1)+1));
            
            pst.closeOnCompletion();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void updateVehicleCombo(){
        try{
            String sql = "SELECT Reg_num FROM vehicle";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            //vehicleCombo.removeAllItems();
            //vehicleCombo.addItem("");
            while(vehicleCombo.getItemCount() > 1){
                vehicleCombo.removeItemAt(1);
            }
            
            while(rs.next()){
                vehicleCombo.addItem(rs.getString(1));
            }
            
            pst.closeOnCompletion();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    private void updateCustomerCombo(){
        try{
            String sql = "SELECT name FROM customers";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            //customerCombo.removeAllItems();
            //customerCombo.addItem("");
            while(customerCombo.getItemCount() > 1){
                customerCombo.removeItemAt(1);
            }
            
            while(rs.next()){
                customerCombo.addItem(rs.getString(1));
            }
            
            pst.closeOnCompletion();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    private void clearOrderPane(){
        vehicleCombo.setSelectedIndex(0);
        customerCombo.setSelectedIndex(0);
        cubeLabel.setText("0");
        metalGroup.clearSelection();
        amountLabel.setText("0.00");
        dueLabel.setText("0.00");
        payField.setText("0.00");
        payButton.setEnabled(false);
    }
    
    private void vehicleComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_vehicleComboItemStateChanged
        if(vehicleCombo.getSelectedIndex() == 0){
            cubeLabel.setText("0");
        }
        else{
            try {
                String sql = "SELECT Cube FROM vehicle WHERE Reg_num = ?";
                
                pst = conn.prepareStatement(sql);
                pst.setString(1, (String) vehicleCombo.getSelectedItem());
                rs = pst.executeQuery();
                cubeLabel.setText("" + rs.getInt(1));
                
                pst.closeOnCompletion();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }            
        }
        metalGroup.clearSelection();
        amountLabel.setText("0.00");
        payButton.setEnabled(false);
    }//GEN-LAST:event_vehicleComboItemStateChanged

    private void customerComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_customerComboItemStateChanged
        if(customerCombo.getSelectedIndex() == 0){
            dueLabel.setText("0.00");
            payField.setText("0.00");
            payButton.setEnabled(false);
        }
        else{
            try {
                String sql = "SELECT due FROM customers WHERE name = ?";
                
                pst = conn.prepareStatement(sql);
                pst.setString(1, (String) customerCombo.getSelectedItem());
                rs = pst.executeQuery();
                dueLabel.setText("" + Double.valueOf(df.format(rs.getDouble(1))));
                if(amountLabel.getText().equals("0.00"))
                    payButton.setEnabled(false);
                else
                    payButton.setEnabled(true);
                
                pst.closeOnCompletion();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }            
        }
    }//GEN-LAST:event_customerComboItemStateChanged

    private void chipsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chipsButtonActionPerformed
        Double val = Double.valueOf(df.format(chipUnit * Double.parseDouble(cubeLabel.getText())));
        amountLabel.setText(val.toString());
        if((vehicleCombo.getSelectedIndex()!= 0) && (customerCombo.getSelectedIndex()!= 0))
            payButton.setEnabled(true);
    }//GEN-LAST:event_chipsButtonActionPerformed

    private void threeQButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeQButtonActionPerformed
        Double val = Double.valueOf(df.format(threeQUnit * Double.parseDouble(cubeLabel.getText())));
        amountLabel.setText(val.toString());
        if((vehicleCombo.getSelectedIndex()!= 0) && (customerCombo.getSelectedIndex()!= 0))
            payButton.setEnabled(true);
    }//GEN-LAST:event_threeQButtonActionPerformed

    private void abcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abcButtonActionPerformed
        Double val = Double.valueOf(df.format(abcUnit * Double.parseDouble(cubeLabel.getText())));
        amountLabel.setText(val.toString());
        if((vehicleCombo.getSelectedIndex()!= 0) && (customerCombo.getSelectedIndex()!= 0))
            payButton.setEnabled(true);
    }//GEN-LAST:event_abcButtonActionPerformed

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
        try{
            String sql = "INSERT INTO orders (ID, vehicle, name, type, amount, pay) VALUES (?,?,?,?,?,?)";
            Double due = Double.valueOf(df.format(Double.parseDouble(dueLabel.getText()) + Double.parseDouble(amountLabel.getText()) - Double.parseDouble(payField.getText())));
            int radio = 0;
            if(chipsButton.isSelected())
                radio = 1;
            else if(threeQButton.isSelected())
                radio = 2;
            else if(abcButton.isSelected())
                radio = 3;
            else
                JOptionPane.showMessageDialog(this, "Please select the metal type");
            if(vehicleCombo.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(this, "Please select the vehicle");
            }
            else if(customerCombo.getSelectedIndex() == 0)
                JOptionPane.showMessageDialog(this, "Please select the customer");
            else{
                pst = conn.prepareStatement(sql);
                pst.setInt(1, Integer.parseInt(orderLabel.getText()));
                pst.setString(2, vehicleCombo.getSelectedItem().toString());
                pst.setString(3, customerCombo.getSelectedItem().toString());
                pst.setInt(4, radio);
                pst.setDouble(5, Double.valueOf(df.format(Double.parseDouble(amountLabel.getText()))));
                pst.setDouble(6, Double.valueOf(df.format(Double.parseDouble(payField.getText()))));
                pst.execute();
                sql = "UPDATE customers SET due = ? WHERE  name = ?";
                pst = conn.prepareStatement(sql);
                pst.setDouble(1, Double.valueOf(df.format(due)));
                pst.setString(2, customerCombo.getSelectedItem().toString());
                pst.execute();
                
                updateHistoryTable();
                updateCustomerTable();
                JOptionPane.showMessageDialog(this, "Payment Successful\nDue amount of "+ due + " is added to " + customerCombo.getSelectedItem().toString() + "'s account");
                clearOrderPane();
                updateOrderNumber();
                
                pst.closeOnCompletion();
            }
        }
        catch(NumberFormatException | SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_payButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        clearOrderPane();
    }//GEN-LAST:event_cancelButtonActionPerformed

///End of COdes for the Order Pane
///////////////////////////////////////////////////////////////////////////////////////////////////////////
////These codes are for history pane

    private void updateHistoryTable(){
         try{
            String sql = "SELECT ID AS \"Bill Number\", date AS \"Date\", name AS \"Customer Name\", type AS \"Metal Type\", vehicle AS \"Vehicle\", amount AS \"Bill Amount\", pay AS \"Amount Payed\" FROM orders";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            orderTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            pst.closeOnCompletion();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    
///End of COdes for the History Pane
///////////////////////////////////////////////////////////////////////////////////////////////////////////

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton abcButton;
    private javax.swing.JButton addButton;
    private javax.swing.JButton addButton1;
    private javax.swing.JLabel amountLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JRadioButton chipsButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton clearButton1;
    private javax.swing.JTextField contactField;
    private javax.swing.JTextField cubeField;
    private javax.swing.JLabel cubeLabel;
    private javax.swing.JComboBox<String> customerCombo;
    private javax.swing.JTextField customerField;
    private javax.swing.JPanel customerPane;
    private javax.swing.JTable customerTable;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteButton1;
    private javax.swing.JLabel dueLabel;
    private javax.swing.JLabel dueLabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.ButtonGroup metalGroup;
    private javax.swing.JPanel orderHistorPane;
    private javax.swing.JLabel orderLabel;
    private javax.swing.JTable orderTable;
    private javax.swing.JButton payButton;
    private javax.swing.JTextField payField;
    private javax.swing.JTextField paymentField;
    private javax.swing.JPanel placeOrderPane;
    private javax.swing.JTextField regField;
    private javax.swing.JPanel reportPane;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JRadioButton threeQButton;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JComboBox<String> vehicleCombo;
    private javax.swing.JPanel vehiclePane;
    private javax.swing.JTable vehicleTable;
    // End of variables declaration//GEN-END:variables
}
